package com.leadtone.mas.bizplug.calendar.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class MbnPeriodcTaskExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table mbn_periodc_task
     *
     * @abatorgenerated Fri Jan 25 10:45:02 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table mbn_periodc_task
     *
     * @abatorgenerated Fri Jan 25 10:45:02 CST 2013
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mbn_periodc_task
     *
     * @abatorgenerated Fri Jan 25 10:45:02 CST 2013
     */
    public MbnPeriodcTaskExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mbn_periodc_task
     *
     * @abatorgenerated Fri Jan 25 10:45:02 CST 2013
     */
    protected MbnPeriodcTaskExample(MbnPeriodcTaskExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mbn_periodc_task
     *
     * @abatorgenerated Fri Jan 25 10:45:02 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mbn_periodc_task
     *
     * @abatorgenerated Fri Jan 25 10:45:02 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mbn_periodc_task
     *
     * @abatorgenerated Fri Jan 25 10:45:02 CST 2013
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mbn_periodc_task
     *
     * @abatorgenerated Fri Jan 25 10:45:02 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mbn_periodc_task
     *
     * @abatorgenerated Fri Jan 25 10:45:02 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mbn_periodc_task
     *
     * @abatorgenerated Fri Jan 25 10:45:02 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table mbn_periodc_task
     *
     * @abatorgenerated Fri Jan 25 10:45:02 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table mbn_periodc_task
     *
     * @abatorgenerated Fri Jan 25 10:45:02 CST 2013
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andMerchantPinIsNull() {
            addCriterion("merchant_pin is null");
            return this;
        }

        public Criteria andMerchantPinIsNotNull() {
            addCriterion("merchant_pin is not null");
            return this;
        }

        public Criteria andMerchantPinEqualTo(Long value) {
            addCriterion("merchant_pin =", value, "merchantPin");
            return this;
        }

        public Criteria andMerchantPinNotEqualTo(Long value) {
            addCriterion("merchant_pin <>", value, "merchantPin");
            return this;
        }

        public Criteria andMerchantPinGreaterThan(Long value) {
            addCriterion("merchant_pin >", value, "merchantPin");
            return this;
        }

        public Criteria andMerchantPinGreaterThanOrEqualTo(Long value) {
            addCriterion("merchant_pin >=", value, "merchantPin");
            return this;
        }

        public Criteria andMerchantPinLessThan(Long value) {
            addCriterion("merchant_pin <", value, "merchantPin");
            return this;
        }

        public Criteria andMerchantPinLessThanOrEqualTo(Long value) {
            addCriterion("merchant_pin <=", value, "merchantPin");
            return this;
        }

        public Criteria andMerchantPinIn(List values) {
            addCriterion("merchant_pin in", values, "merchantPin");
            return this;
        }

        public Criteria andMerchantPinNotIn(List values) {
            addCriterion("merchant_pin not in", values, "merchantPin");
            return this;
        }

        public Criteria andMerchantPinBetween(Long value1, Long value2) {
            addCriterion("merchant_pin between", value1, value2, "merchantPin");
            return this;
        }

        public Criteria andMerchantPinNotBetween(Long value1, Long value2) {
            addCriterion("merchant_pin not between", value1, value2, "merchantPin");
            return this;
        }

        public Criteria andOperationIdIsNull() {
            addCriterion("operation_id is null");
            return this;
        }

        public Criteria andOperationIdIsNotNull() {
            addCriterion("operation_id is not null");
            return this;
        }

        public Criteria andOperationIdEqualTo(Integer value) {
            addCriterion("operation_id =", value, "operationId");
            return this;
        }

        public Criteria andOperationIdNotEqualTo(Integer value) {
            addCriterion("operation_id <>", value, "operationId");
            return this;
        }

        public Criteria andOperationIdGreaterThan(Integer value) {
            addCriterion("operation_id >", value, "operationId");
            return this;
        }

        public Criteria andOperationIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("operation_id >=", value, "operationId");
            return this;
        }

        public Criteria andOperationIdLessThan(Integer value) {
            addCriterion("operation_id <", value, "operationId");
            return this;
        }

        public Criteria andOperationIdLessThanOrEqualTo(Integer value) {
            addCriterion("operation_id <=", value, "operationId");
            return this;
        }

        public Criteria andOperationIdIn(List values) {
            addCriterion("operation_id in", values, "operationId");
            return this;
        }

        public Criteria andOperationIdNotIn(List values) {
            addCriterion("operation_id not in", values, "operationId");
            return this;
        }

        public Criteria andOperationIdBetween(Integer value1, Integer value2) {
            addCriterion("operation_id between", value1, value2, "operationId");
            return this;
        }

        public Criteria andOperationIdNotBetween(Integer value1, Integer value2) {
            addCriterion("operation_id not between", value1, value2, "operationId");
            return this;
        }

        public Criteria andAwokeModeIsNull() {
            addCriterion("awoke_mode is null");
            return this;
        }

        public Criteria andAwokeModeIsNotNull() {
            addCriterion("awoke_mode is not null");
            return this;
        }

        public Criteria andAwokeModeEqualTo(Integer value) {
            addCriterion("awoke_mode =", value, "awokeMode");
            return this;
        }

        public Criteria andAwokeModeNotEqualTo(Integer value) {
            addCriterion("awoke_mode <>", value, "awokeMode");
            return this;
        }

        public Criteria andAwokeModeGreaterThan(Integer value) {
            addCriterion("awoke_mode >", value, "awokeMode");
            return this;
        }

        public Criteria andAwokeModeGreaterThanOrEqualTo(Integer value) {
            addCriterion("awoke_mode >=", value, "awokeMode");
            return this;
        }

        public Criteria andAwokeModeLessThan(Integer value) {
            addCriterion("awoke_mode <", value, "awokeMode");
            return this;
        }

        public Criteria andAwokeModeLessThanOrEqualTo(Integer value) {
            addCriterion("awoke_mode <=", value, "awokeMode");
            return this;
        }

        public Criteria andAwokeModeIn(List values) {
            addCriterion("awoke_mode in", values, "awokeMode");
            return this;
        }

        public Criteria andAwokeModeNotIn(List values) {
            addCriterion("awoke_mode not in", values, "awokeMode");
            return this;
        }

        public Criteria andAwokeModeBetween(Integer value1, Integer value2) {
            addCriterion("awoke_mode between", value1, value2, "awokeMode");
            return this;
        }

        public Criteria andAwokeModeNotBetween(Integer value1, Integer value2) {
            addCriterion("awoke_mode not between", value1, value2, "awokeMode");
            return this;
        }

        public Criteria andNumberIsNull() {
            addCriterion("number is null");
            return this;
        }

        public Criteria andNumberIsNotNull() {
            addCriterion("number is not null");
            return this;
        }

        public Criteria andNumberEqualTo(Integer value) {
            addCriterion("number =", value, "number");
            return this;
        }

        public Criteria andNumberNotEqualTo(Integer value) {
            addCriterion("number <>", value, "number");
            return this;
        }

        public Criteria andNumberGreaterThan(Integer value) {
            addCriterion("number >", value, "number");
            return this;
        }

        public Criteria andNumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("number >=", value, "number");
            return this;
        }

        public Criteria andNumberLessThan(Integer value) {
            addCriterion("number <", value, "number");
            return this;
        }

        public Criteria andNumberLessThanOrEqualTo(Integer value) {
            addCriterion("number <=", value, "number");
            return this;
        }

        public Criteria andNumberIn(List values) {
            addCriterion("number in", values, "number");
            return this;
        }

        public Criteria andNumberNotIn(List values) {
            addCriterion("number not in", values, "number");
            return this;
        }

        public Criteria andNumberBetween(Integer value1, Integer value2) {
            addCriterion("number between", value1, value2, "number");
            return this;
        }

        public Criteria andNumberNotBetween(Integer value1, Integer value2) {
            addCriterion("number not between", value1, value2, "number");
            return this;
        }

        public Criteria andAwakeTimeIsNull() {
            addCriterion("awake_time is null");
            return this;
        }

        public Criteria andAwakeTimeIsNotNull() {
            addCriterion("awake_time is not null");
            return this;
        }

        public Criteria andAwakeTimeEqualTo(Date value) {
            addCriterion("awake_time =", value, "awakeTime");
            return this;
        }

        public Criteria andAwakeTimeNotEqualTo(Date value) {
            addCriterion("awake_time <>", value, "awakeTime");
            return this;
        }

        public Criteria andAwakeTimeGreaterThan(Date value) {
            addCriterion("awake_time >", value, "awakeTime");
            return this;
        }

        public Criteria andAwakeTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("awake_time >=", value, "awakeTime");
            return this;
        }

        public Criteria andAwakeTimeLessThan(Date value) {
            addCriterion("awake_time <", value, "awakeTime");
            return this;
        }

        public Criteria andAwakeTimeLessThanOrEqualTo(Date value) {
            addCriterion("awake_time <=", value, "awakeTime");
            return this;
        }

        public Criteria andAwakeTimeIn(List values) {
            addCriterion("awake_time in", values, "awakeTime");
            return this;
        }

        public Criteria andAwakeTimeNotIn(List values) {
            addCriterion("awake_time not in", values, "awakeTime");
            return this;
        }

        public Criteria andAwakeTimeBetween(Date value1, Date value2) {
            addCriterion("awake_time between", value1, value2, "awakeTime");
            return this;
        }

        public Criteria andAwakeTimeNotBetween(Date value1, Date value2) {
            addCriterion("awake_time not between", value1, value2, "awakeTime");
            return this;
        }

        public Criteria andBeginTimeIsNull() {
            addCriterion("begin_time is null");
            return this;
        }

        public Criteria andBeginTimeIsNotNull() {
            addCriterion("begin_time is not null");
            return this;
        }

        public Criteria andBeginTimeEqualTo(Date value) {
            addCriterion("begin_time =", value, "beginTime");
            return this;
        }

        public Criteria andBeginTimeNotEqualTo(Date value) {
            addCriterion("begin_time <>", value, "beginTime");
            return this;
        }

        public Criteria andBeginTimeGreaterThan(Date value) {
            addCriterion("begin_time >", value, "beginTime");
            return this;
        }

        public Criteria andBeginTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("begin_time >=", value, "beginTime");
            return this;
        }

        public Criteria andBeginTimeLessThan(Date value) {
            addCriterion("begin_time <", value, "beginTime");
            return this;
        }

        public Criteria andBeginTimeLessThanOrEqualTo(Date value) {
            addCriterion("begin_time <=", value, "beginTime");
            return this;
        }

        public Criteria andBeginTimeIn(List values) {
            addCriterion("begin_time in", values, "beginTime");
            return this;
        }

        public Criteria andBeginTimeNotIn(List values) {
            addCriterion("begin_time not in", values, "beginTime");
            return this;
        }

        public Criteria andBeginTimeBetween(Date value1, Date value2) {
            addCriterion("begin_time between", value1, value2, "beginTime");
            return this;
        }

        public Criteria andBeginTimeNotBetween(Date value1, Date value2) {
            addCriterion("begin_time not between", value1, value2, "beginTime");
            return this;
        }

        public Criteria andEndTimeIsNull() {
            addCriterion("end_time is null");
            return this;
        }

        public Criteria andEndTimeIsNotNull() {
            addCriterion("end_time is not null");
            return this;
        }

        public Criteria andEndTimeEqualTo(Date value) {
            addCriterion("end_time =", value, "endTime");
            return this;
        }

        public Criteria andEndTimeNotEqualTo(Date value) {
            addCriterion("end_time <>", value, "endTime");
            return this;
        }

        public Criteria andEndTimeGreaterThan(Date value) {
            addCriterion("end_time >", value, "endTime");
            return this;
        }

        public Criteria andEndTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("end_time >=", value, "endTime");
            return this;
        }

        public Criteria andEndTimeLessThan(Date value) {
            addCriterion("end_time <", value, "endTime");
            return this;
        }

        public Criteria andEndTimeLessThanOrEqualTo(Date value) {
            addCriterion("end_time <=", value, "endTime");
            return this;
        }

        public Criteria andEndTimeIn(List values) {
            addCriterion("end_time in", values, "endTime");
            return this;
        }

        public Criteria andEndTimeNotIn(List values) {
            addCriterion("end_time not in", values, "endTime");
            return this;
        }

        public Criteria andEndTimeBetween(Date value1, Date value2) {
            addCriterion("end_time between", value1, value2, "endTime");
            return this;
        }

        public Criteria andEndTimeNotBetween(Date value1, Date value2) {
            addCriterion("end_time not between", value1, value2, "endTime");
            return this;
        }

        public Criteria andAwokeRateIsNull() {
            addCriterion("awoke_rate is null");
            return this;
        }

        public Criteria andAwokeRateIsNotNull() {
            addCriterion("awoke_rate is not null");
            return this;
        }

        public Criteria andAwokeRateEqualTo(Integer value) {
            addCriterion("awoke_rate =", value, "awokeRate");
            return this;
        }

        public Criteria andAwokeRateNotEqualTo(Integer value) {
            addCriterion("awoke_rate <>", value, "awokeRate");
            return this;
        }

        public Criteria andAwokeRateGreaterThan(Integer value) {
            addCriterion("awoke_rate >", value, "awokeRate");
            return this;
        }

        public Criteria andAwokeRateGreaterThanOrEqualTo(Integer value) {
            addCriterion("awoke_rate >=", value, "awokeRate");
            return this;
        }

        public Criteria andAwokeRateLessThan(Integer value) {
            addCriterion("awoke_rate <", value, "awokeRate");
            return this;
        }

        public Criteria andAwokeRateLessThanOrEqualTo(Integer value) {
            addCriterion("awoke_rate <=", value, "awokeRate");
            return this;
        }

        public Criteria andAwokeRateIn(List values) {
            addCriterion("awoke_rate in", values, "awokeRate");
            return this;
        }

        public Criteria andAwokeRateNotIn(List values) {
            addCriterion("awoke_rate not in", values, "awokeRate");
            return this;
        }

        public Criteria andAwokeRateBetween(Integer value1, Integer value2) {
            addCriterion("awoke_rate between", value1, value2, "awokeRate");
            return this;
        }

        public Criteria andAwokeRateNotBetween(Integer value1, Integer value2) {
            addCriterion("awoke_rate not between", value1, value2, "awokeRate");
            return this;
        }

        public Criteria andExpireTimeIsNull() {
            addCriterion("expire_time is null");
            return this;
        }

        public Criteria andExpireTimeIsNotNull() {
            addCriterion("expire_time is not null");
            return this;
        }

        public Criteria andExpireTimeEqualTo(Integer value) {
            addCriterion("expire_time =", value, "expireTime");
            return this;
        }

        public Criteria andExpireTimeNotEqualTo(Integer value) {
            addCriterion("expire_time <>", value, "expireTime");
            return this;
        }

        public Criteria andExpireTimeGreaterThan(Integer value) {
            addCriterion("expire_time >", value, "expireTime");
            return this;
        }

        public Criteria andExpireTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("expire_time >=", value, "expireTime");
            return this;
        }

        public Criteria andExpireTimeLessThan(Integer value) {
            addCriterion("expire_time <", value, "expireTime");
            return this;
        }

        public Criteria andExpireTimeLessThanOrEqualTo(Integer value) {
            addCriterion("expire_time <=", value, "expireTime");
            return this;
        }

        public Criteria andExpireTimeIn(List values) {
            addCriterion("expire_time in", values, "expireTime");
            return this;
        }

        public Criteria andExpireTimeNotIn(List values) {
            addCriterion("expire_time not in", values, "expireTime");
            return this;
        }

        public Criteria andExpireTimeBetween(Integer value1, Integer value2) {
            addCriterion("expire_time between", value1, value2, "expireTime");
            return this;
        }

        public Criteria andExpireTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("expire_time not between", value1, value2, "expireTime");
            return this;
        }

        public Criteria andDivDayIsNull() {
            addCriterion("div_day is null");
            return this;
        }

        public Criteria andDivDayIsNotNull() {
            addCriterion("div_day is not null");
            return this;
        }

        public Criteria andDivDayEqualTo(Integer value) {
            addCriterion("div_day =", value, "divDay");
            return this;
        }

        public Criteria andDivDayNotEqualTo(Integer value) {
            addCriterion("div_day <>", value, "divDay");
            return this;
        }

        public Criteria andDivDayGreaterThan(Integer value) {
            addCriterion("div_day >", value, "divDay");
            return this;
        }

        public Criteria andDivDayGreaterThanOrEqualTo(Integer value) {
            addCriterion("div_day >=", value, "divDay");
            return this;
        }

        public Criteria andDivDayLessThan(Integer value) {
            addCriterion("div_day <", value, "divDay");
            return this;
        }

        public Criteria andDivDayLessThanOrEqualTo(Integer value) {
            addCriterion("div_day <=", value, "divDay");
            return this;
        }

        public Criteria andDivDayIn(List values) {
            addCriterion("div_day in", values, "divDay");
            return this;
        }

        public Criteria andDivDayNotIn(List values) {
            addCriterion("div_day not in", values, "divDay");
            return this;
        }

        public Criteria andDivDayBetween(Integer value1, Integer value2) {
            addCriterion("div_day between", value1, value2, "divDay");
            return this;
        }

        public Criteria andDivDayNotBetween(Integer value1, Integer value2) {
            addCriterion("div_day not between", value1, value2, "divDay");
            return this;
        }

        public Criteria andDivWeekIsNull() {
            addCriterion("div_week is null");
            return this;
        }

        public Criteria andDivWeekIsNotNull() {
            addCriterion("div_week is not null");
            return this;
        }

        public Criteria andDivWeekEqualTo(Integer value) {
            addCriterion("div_week =", value, "divWeek");
            return this;
        }

        public Criteria andDivWeekNotEqualTo(Integer value) {
            addCriterion("div_week <>", value, "divWeek");
            return this;
        }

        public Criteria andDivWeekGreaterThan(Integer value) {
            addCriterion("div_week >", value, "divWeek");
            return this;
        }

        public Criteria andDivWeekGreaterThanOrEqualTo(Integer value) {
            addCriterion("div_week >=", value, "divWeek");
            return this;
        }

        public Criteria andDivWeekLessThan(Integer value) {
            addCriterion("div_week <", value, "divWeek");
            return this;
        }

        public Criteria andDivWeekLessThanOrEqualTo(Integer value) {
            addCriterion("div_week <=", value, "divWeek");
            return this;
        }

        public Criteria andDivWeekIn(List values) {
            addCriterion("div_week in", values, "divWeek");
            return this;
        }

        public Criteria andDivWeekNotIn(List values) {
            addCriterion("div_week not in", values, "divWeek");
            return this;
        }

        public Criteria andDivWeekBetween(Integer value1, Integer value2) {
            addCriterion("div_week between", value1, value2, "divWeek");
            return this;
        }

        public Criteria andDivWeekNotBetween(Integer value1, Integer value2) {
            addCriterion("div_week not between", value1, value2, "divWeek");
            return this;
        }

        public Criteria andDivDayOfWeekIsNull() {
            addCriterion("div_day_of_week is null");
            return this;
        }

        public Criteria andDivDayOfWeekIsNotNull() {
            addCriterion("div_day_of_week is not null");
            return this;
        }

        public Criteria andDivDayOfWeekEqualTo(Integer value) {
            addCriterion("div_day_of_week =", value, "divDayOfWeek");
            return this;
        }

        public Criteria andDivDayOfWeekNotEqualTo(Integer value) {
            addCriterion("div_day_of_week <>", value, "divDayOfWeek");
            return this;
        }

        public Criteria andDivDayOfWeekGreaterThan(Integer value) {
            addCriterion("div_day_of_week >", value, "divDayOfWeek");
            return this;
        }

        public Criteria andDivDayOfWeekGreaterThanOrEqualTo(Integer value) {
            addCriterion("div_day_of_week >=", value, "divDayOfWeek");
            return this;
        }

        public Criteria andDivDayOfWeekLessThan(Integer value) {
            addCriterion("div_day_of_week <", value, "divDayOfWeek");
            return this;
        }

        public Criteria andDivDayOfWeekLessThanOrEqualTo(Integer value) {
            addCriterion("div_day_of_week <=", value, "divDayOfWeek");
            return this;
        }

        public Criteria andDivDayOfWeekIn(List values) {
            addCriterion("div_day_of_week in", values, "divDayOfWeek");
            return this;
        }

        public Criteria andDivDayOfWeekNotIn(List values) {
            addCriterion("div_day_of_week not in", values, "divDayOfWeek");
            return this;
        }

        public Criteria andDivDayOfWeekBetween(Integer value1, Integer value2) {
            addCriterion("div_day_of_week between", value1, value2, "divDayOfWeek");
            return this;
        }

        public Criteria andDivDayOfWeekNotBetween(Integer value1, Integer value2) {
            addCriterion("div_day_of_week not between", value1, value2, "divDayOfWeek");
            return this;
        }

        public Criteria andDivMonthIsNull() {
            addCriterion("div_month is null");
            return this;
        }

        public Criteria andDivMonthIsNotNull() {
            addCriterion("div_month is not null");
            return this;
        }

        public Criteria andDivMonthEqualTo(Integer value) {
            addCriterion("div_month =", value, "divMonth");
            return this;
        }

        public Criteria andDivMonthNotEqualTo(Integer value) {
            addCriterion("div_month <>", value, "divMonth");
            return this;
        }

        public Criteria andDivMonthGreaterThan(Integer value) {
            addCriterion("div_month >", value, "divMonth");
            return this;
        }

        public Criteria andDivMonthGreaterThanOrEqualTo(Integer value) {
            addCriterion("div_month >=", value, "divMonth");
            return this;
        }

        public Criteria andDivMonthLessThan(Integer value) {
            addCriterion("div_month <", value, "divMonth");
            return this;
        }

        public Criteria andDivMonthLessThanOrEqualTo(Integer value) {
            addCriterion("div_month <=", value, "divMonth");
            return this;
        }

        public Criteria andDivMonthIn(List values) {
            addCriterion("div_month in", values, "divMonth");
            return this;
        }

        public Criteria andDivMonthNotIn(List values) {
            addCriterion("div_month not in", values, "divMonth");
            return this;
        }

        public Criteria andDivMonthBetween(Integer value1, Integer value2) {
            addCriterion("div_month between", value1, value2, "divMonth");
            return this;
        }

        public Criteria andDivMonthNotBetween(Integer value1, Integer value2) {
            addCriterion("div_month not between", value1, value2, "divMonth");
            return this;
        }

        public Criteria andTimesIsNull() {
            addCriterion("times is null");
            return this;
        }

        public Criteria andTimesIsNotNull() {
            addCriterion("times is not null");
            return this;
        }

        public Criteria andTimesEqualTo(Integer value) {
            addCriterion("times =", value, "times");
            return this;
        }

        public Criteria andTimesNotEqualTo(Integer value) {
            addCriterion("times <>", value, "times");
            return this;
        }

        public Criteria andTimesGreaterThan(Integer value) {
            addCriterion("times >", value, "times");
            return this;
        }

        public Criteria andTimesGreaterThanOrEqualTo(Integer value) {
            addCriterion("times >=", value, "times");
            return this;
        }

        public Criteria andTimesLessThan(Integer value) {
            addCriterion("times <", value, "times");
            return this;
        }

        public Criteria andTimesLessThanOrEqualTo(Integer value) {
            addCriterion("times <=", value, "times");
            return this;
        }

        public Criteria andTimesIn(List values) {
            addCriterion("times in", values, "times");
            return this;
        }

        public Criteria andTimesNotIn(List values) {
            addCriterion("times not in", values, "times");
            return this;
        }

        public Criteria andTimesBetween(Integer value1, Integer value2) {
            addCriterion("times between", value1, value2, "times");
            return this;
        }

        public Criteria andTimesNotBetween(Integer value1, Integer value2) {
            addCriterion("times not between", value1, value2, "times");
            return this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("status =", value, "status");
            return this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("status <>", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("status >", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("status >=", value, "status");
            return this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("status <", value, "status");
            return this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("status <=", value, "status");
            return this;
        }

        public Criteria andStatusIn(List values) {
            addCriterion("status in", values, "status");
            return this;
        }

        public Criteria andStatusNotIn(List values) {
            addCriterion("status not in", values, "status");
            return this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("status between", value1, value2, "status");
            return this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("status not between", value1, value2, "status");
            return this;
        }

        public Criteria andCalendarTypeIsNull() {
            addCriterion("calendar_type is null");
            return this;
        }

        public Criteria andCalendarTypeIsNotNull() {
            addCriterion("calendar_type is not null");
            return this;
        }

        public Criteria andCalendarTypeEqualTo(Integer value) {
            addCriterion("calendar_type =", value, "calendarType");
            return this;
        }

        public Criteria andCalendarTypeNotEqualTo(Integer value) {
            addCriterion("calendar_type <>", value, "calendarType");
            return this;
        }

        public Criteria andCalendarTypeGreaterThan(Integer value) {
            addCriterion("calendar_type >", value, "calendarType");
            return this;
        }

        public Criteria andCalendarTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("calendar_type >=", value, "calendarType");
            return this;
        }

        public Criteria andCalendarTypeLessThan(Integer value) {
            addCriterion("calendar_type <", value, "calendarType");
            return this;
        }

        public Criteria andCalendarTypeLessThanOrEqualTo(Integer value) {
            addCriterion("calendar_type <=", value, "calendarType");
            return this;
        }

        public Criteria andCalendarTypeIn(List values) {
            addCriterion("calendar_type in", values, "calendarType");
            return this;
        }

        public Criteria andCalendarTypeNotIn(List values) {
            addCriterion("calendar_type not in", values, "calendarType");
            return this;
        }

        public Criteria andCalendarTypeBetween(Integer value1, Integer value2) {
            addCriterion("calendar_type between", value1, value2, "calendarType");
            return this;
        }

        public Criteria andCalendarTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("calendar_type not between", value1, value2, "calendarType");
            return this;
        }

        public Criteria andLastTimeIsNull() {
            addCriterion("last_time is null");
            return this;
        }

        public Criteria andLastTimeIsNotNull() {
            addCriterion("last_time is not null");
            return this;
        }

        public Criteria andLastTimeEqualTo(Date value) {
            addCriterion("last_time =", value, "lastTime");
            return this;
        }

        public Criteria andLastTimeNotEqualTo(Date value) {
            addCriterion("last_time <>", value, "lastTime");
            return this;
        }

        public Criteria andLastTimeGreaterThan(Date value) {
            addCriterion("last_time >", value, "lastTime");
            return this;
        }

        public Criteria andLastTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("last_time >=", value, "lastTime");
            return this;
        }

        public Criteria andLastTimeLessThan(Date value) {
            addCriterion("last_time <", value, "lastTime");
            return this;
        }

        public Criteria andLastTimeLessThanOrEqualTo(Date value) {
            addCriterion("last_time <=", value, "lastTime");
            return this;
        }

        public Criteria andLastTimeIn(List values) {
            addCriterion("last_time in", values, "lastTime");
            return this;
        }

        public Criteria andLastTimeNotIn(List values) {
            addCriterion("last_time not in", values, "lastTime");
            return this;
        }

        public Criteria andLastTimeBetween(Date value1, Date value2) {
            addCriterion("last_time between", value1, value2, "lastTime");
            return this;
        }

        public Criteria andLastTimeNotBetween(Date value1, Date value2) {
            addCriterion("last_time not between", value1, value2, "lastTime");
            return this;
        }

        public Criteria andTaskTypeIsNull() {
            addCriterion("task_type is null");
            return this;
        }

        public Criteria andTaskTypeIsNotNull() {
            addCriterion("task_type is not null");
            return this;
        }

        public Criteria andTaskTypeEqualTo(Integer value) {
            addCriterion("task_type =", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeNotEqualTo(Integer value) {
            addCriterion("task_type <>", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeGreaterThan(Integer value) {
            addCriterion("task_type >", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("task_type >=", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeLessThan(Integer value) {
            addCriterion("task_type <", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeLessThanOrEqualTo(Integer value) {
            addCriterion("task_type <=", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeIn(List values) {
            addCriterion("task_type in", values, "taskType");
            return this;
        }

        public Criteria andTaskTypeNotIn(List values) {
            addCriterion("task_type not in", values, "taskType");
            return this;
        }

        public Criteria andTaskTypeBetween(Integer value1, Integer value2) {
            addCriterion("task_type between", value1, value2, "taskType");
            return this;
        }

        public Criteria andTaskTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("task_type not between", value1, value2, "taskType");
            return this;
        }

        public Criteria andCreaterIsNull() {
            addCriterion("creater is null");
            return this;
        }

        public Criteria andCreaterIsNotNull() {
            addCriterion("creater is not null");
            return this;
        }

        public Criteria andCreaterEqualTo(Long value) {
            addCriterion("creater =", value, "creater");
            return this;
        }

        public Criteria andCreaterNotEqualTo(Long value) {
            addCriterion("creater <>", value, "creater");
            return this;
        }

        public Criteria andCreaterGreaterThan(Long value) {
            addCriterion("creater >", value, "creater");
            return this;
        }

        public Criteria andCreaterGreaterThanOrEqualTo(Long value) {
            addCriterion("creater >=", value, "creater");
            return this;
        }

        public Criteria andCreaterLessThan(Long value) {
            addCriterion("creater <", value, "creater");
            return this;
        }

        public Criteria andCreaterLessThanOrEqualTo(Long value) {
            addCriterion("creater <=", value, "creater");
            return this;
        }

        public Criteria andCreaterIn(List values) {
            addCriterion("creater in", values, "creater");
            return this;
        }

        public Criteria andCreaterNotIn(List values) {
            addCriterion("creater not in", values, "creater");
            return this;
        }

        public Criteria andCreaterBetween(Long value1, Long value2) {
            addCriterion("creater between", value1, value2, "creater");
            return this;
        }

        public Criteria andCreaterNotBetween(Long value1, Long value2) {
            addCriterion("creater not between", value1, value2, "creater");
            return this;
        }
    }
}